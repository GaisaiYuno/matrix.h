#include "matrix.h"
#include "euclid.h"
using namespace std;
Matrix<long double>X[200],Y,w;
long double res[200];
int n,m;
Matrix<long double>grad(){
    Matrix<long double>gw(1,m+1);
    for (int j=1;j<=m+1;++j){
        for (int i=1;i<=n;++i){
            gw[1][j]+=2*X[i][1][j]*res[i]/n;
        }
    }
    return gw;
}
int main(){
    const double alpha=0.03;
    cin>>n>>m;
    for (int i=1;i<=n;++i) X[i].resize(1,m+1);
    Y.resize(n,1);
    w.resize(1,m+1);
    for (int i=1;i<=n;++i){
        X[i][1][1]=1;
        for (int j=1;j<=m;++j) cin>>X[i][1][j+1];
        cin>>Y[i][1];
    }
    int iter=10000;
    while (iter--){
        long double J=0;
        for (int i=1;i<=n;++i){
            res[i]=(X[i]&w)-Y[i][1];
            J+=res[i]*res[i];
        }
        J/=n;
        // cout<<J<<endl;
        w=w-alpha*grad();
    }
    cout<<w<<endl;
}
/*
9.5 0.21034 3.83
7.2 4.426 0.175
8.1 

3 1
2
4
6
1
2
3
岭回归数据
10 2
1.1 1.1
1.4 1.5
1.7 1.8
1.7 1.7
1.8 1.9
1.8 1.8
1.9 1.8
2.0 2.1
2.3 2.4
2.4 2.5
16.3 16.8 19.2 18.0 19.5 20.9 21.1 20.9 20.3 22.0

得到
Row Vector
11.473 8.58426 -4.03773

与原数据 10,2,3 相差太大，因此需要岭回归

99 1
9144 10490.4
2826 3558.39
7007 8960.17
6541 7391.06
993 1864.74
10524 12062.6
3522 5294.38
5635 5944.54
3018 3365.69
8725 9954.25
2548 3265.58
7479 9600.19
15047 18752.7
13438 14050.9
13928 16105
16802 13531.8
3926 5218.35
6092 7735.55
11388 8475.22
6455 7388.04
12040 14047.2
13536 15498.6
10664 9521.91
3913 5537.08
6077 7319.69
14398 15737.2
14370 17299.1
10933 12647.6
5340 7049.29
10872 12230.4
12979 16015.3
6829 8216.51
15740 17170.5
12631 13742
7645 7764.63
6644 8307.19
5559 6290.93
13407 14943.5
8304 9238.64
7897 7318.33
17578 19296.2
2215 3473.46
15766 17729.1
7125 9929.76
8623 10225.4
15834 18658.7
10311 8477.32
12566 11661.1
10777 12148.6
2564 3751.61
6254 7494.3
6890 6862.88
9235 10150.2
5174 6515.48
12008 11374.4
7500 9045.6
9735 11273.3
9079 8039.97
8918 10059.7
8215 6708.61
2655 2934.14
19481 23374
10296 11238.7
9165 8862.87
13031 14976.7
8336 10627.3
5474 5772.94
10690 11834.4
7899 9065.76
10921 12651.1
17245 18833.3
12749 13994.2
15256 18477.5
10141 11680.5
7063 9023.75
6437 6803.44
15183 15259.2
5662 6016.01
9545 10885.6
6956 6530.55
6962 7040.2
8735 8624.25
5931 6933.21
12166 10398.4
8613 10186.7
8937 8932.79
9504 8885.14
6587 7559.01
14319 11707.2
5522 4984.32
6811 8974.14
9079 9808.51
8788 8871.88
10820 12411.4
7559 7302.38
15158 12084.8
9527 11771.8
7863 9817.53
22910 23904.6
*/